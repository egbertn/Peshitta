#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace peshitta.nl.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bijbel")]
	public sealed partial class Entities : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbook(book instance);
    partial void Updatebook(book instance);
    partial void Deletebook(book instance);
    partial void Insertbookchapter(bookchapter instance);
    partial void Updatebookchapter(bookchapter instance);
    partial void Deletebookchapter(bookchapter instance);
    partial void Insertbookchapteralinea(bookchapteralinea instance);
    partial void Updatebookchapteralinea(bookchapteralinea instance);
    partial void Deletebookchapteralinea(bookchapteralinea instance);
    partial void Insertbookedition(bookedition instance);
    partial void Updatebookedition(bookedition instance);
    partial void Deletebookedition(bookedition instance);
    partial void InsertLanguage(Language instance);
    partial void UpdateLanguage(Language instance);
    partial void DeleteLanguage(Language instance);
    partial void InsertText(Text instance);
    partial void UpdateText(Text instance);
    partial void DeleteText(Text instance);
    partial void Inserttextword(textword instance);
    partial void Updatetextword(textword instance);
    partial void Deletetextword(textword instance);
    partial void Insertword(word instance);
    partial void Updateword(word instance);
    partial void Deleteword(word instance);
    partial void InserttextwordsHistory(textwordsHistory instance);
    partial void UpdatetextwordsHistory(textwordsHistory instance);
    partial void DeletetextwordsHistory(textwordsHistory instance);
    partial void InsertSynonym(Synonym instance);
    partial void UpdateSynonym(Synonym instance);
    partial void DeleteSynonym(Synonym instance);
    partial void InsertPublicationCode(PublicationCode instance);
    partial void UpdatePublicationCode(PublicationCode instance);
    partial void DeletePublicationCode(PublicationCode instance);
    partial void InsertTranslateToWord(TranslateToWord instance);
    partial void UpdateTranslateToWord(TranslateToWord instance);
    partial void DeleteTranslateToWord(TranslateToWord instance);
    #endregion
		
		public Entities() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BIJBELConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Entities(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Entities(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Entities(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Entities(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<book> books
		{
			get
			{
				return this.GetTable<book>();
			}
		}
		
		public System.Data.Linq.Table<bookchapter> bookchapters
		{
			get
			{
				return this.GetTable<bookchapter>();
			}
		}
		
		public System.Data.Linq.Table<bookchapteralinea> bookchapteralineas
		{
			get
			{
				return this.GetTable<bookchapteralinea>();
			}
		}
		
		public System.Data.Linq.Table<bookedition> bookeditions
		{
			get
			{
				return this.GetTable<bookedition>();
			}
		}
		
		public System.Data.Linq.Table<Language> Languages
		{
			get
			{
				return this.GetTable<Language>();
			}
		}
		
		public System.Data.Linq.Table<Text> Texts
		{
			get
			{
				return this.GetTable<Text>();
			}
		}
		
		public System.Data.Linq.Table<textword> textwords
		{
			get
			{
				return this.GetTable<textword>();
			}
		}
		
		public System.Data.Linq.Table<word> words
		{
			get
			{
				return this.GetTable<word>();
			}
		}
		
		public System.Data.Linq.Table<textwordsHistory> textwordsHistories
		{
			get
			{
				return this.GetTable<textwordsHistory>();
			}
		}
		
		public System.Data.Linq.Table<Synonym> Synonyms
		{
			get
			{
				return this.GetTable<Synonym>();
			}
		}
		
		public System.Data.Linq.Table<PublicationCode> PublicationCodes
		{
			get
			{
				return this.GetTable<PublicationCode>();
			}
		}
		
		public System.Data.Linq.Table<TranslateToWord> TranslateToWords
		{
			get
			{
				return this.GetTable<TranslateToWord>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FindWord")]
		public int FindWord([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(100)")] System.Data.Linq.Binary word, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> wordid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallInt")] System.Nullable<short> langid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), word, number, wordid, langid);
			wordid = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.book")]
	public partial class book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bookid;
		
		private string _Title;
		
		private string _abbreviation;
		
		private EntitySet<bookchapter> _bookchapters;
		
		private EntitySet<bookedition> _bookeditions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookidChanging(int value);
    partial void OnbookidChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnabbreviationChanging(string value);
    partial void OnabbreviationChanged();
    #endregion
		
		public book()
		{
			this._bookchapters = new EntitySet<bookchapter>(new Action<bookchapter>(this.attach_bookchapters), new Action<bookchapter>(this.detach_bookchapters));
			this._bookeditions = new EntitySet<bookedition>(new Action<bookedition>(this.attach_bookeditions), new Action<bookedition>(this.detach_bookeditions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bookid
		{
			get
			{
				return this._bookid;
			}
			set
			{
				if ((this._bookid != value))
				{
					this.OnbookidChanging(value);
					this.SendPropertyChanging();
					this._bookid = value;
					this.SendPropertyChanged("bookid");
					this.OnbookidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(20)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbreviation", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string abbreviation
		{
			get
			{
				return this._abbreviation;
			}
			set
			{
				if ((this._abbreviation != value))
				{
					this.OnabbreviationChanging(value);
					this.SendPropertyChanging();
					this._abbreviation = value;
					this.SendPropertyChanged("abbreviation");
					this.OnabbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_bookchapter", Storage="_bookchapters", ThisKey="bookid", OtherKey="bookid")]
		public EntitySet<bookchapter> bookchapters
		{
			get
			{
				return this._bookchapters;
			}
			set
			{
				this._bookchapters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_bookedition", Storage="_bookeditions", ThisKey="bookid", OtherKey="bookid")]
		public EntitySet<bookedition> bookeditions
		{
			get
			{
				return this._bookeditions;
			}
			set
			{
				this._bookeditions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookchapters(bookchapter entity)
		{
			this.SendPropertyChanging();
			entity.book = this;
		}
		
		private void detach_bookchapters(bookchapter entity)
		{
			this.SendPropertyChanging();
			entity.book = null;
		}
		
		private void attach_bookeditions(bookedition entity)
		{
			this.SendPropertyChanging();
			entity.book = this;
		}
		
		private void detach_bookeditions(bookedition entity)
		{
			this.SendPropertyChanging();
			entity.book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bookchapter")]
	public partial class bookchapter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bookchapterid;
		
		private int _bookid;
		
		private int _chapter;
		
		private string _comments;
		
		private EntitySet<bookchapteralinea> _bookchapteralineas;
		
		private EntityRef<book> _book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookchapteridChanging(int value);
    partial void OnbookchapteridChanged();
    partial void OnbookidChanging(int value);
    partial void OnbookidChanged();
    partial void OnchapterChanging(int value);
    partial void OnchapterChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public bookchapter()
		{
			this._bookchapteralineas = new EntitySet<bookchapteralinea>(new Action<bookchapteralinea>(this.attach_bookchapteralineas), new Action<bookchapteralinea>(this.detach_bookchapteralineas));
			this._book = default(EntityRef<book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookchapterid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bookchapterid
		{
			get
			{
				return this._bookchapterid;
			}
			set
			{
				if ((this._bookchapterid != value))
				{
					this.OnbookchapteridChanging(value);
					this.SendPropertyChanging();
					this._bookchapterid = value;
					this.SendPropertyChanged("bookchapterid");
					this.OnbookchapteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookid", DbType="Int")]
		public int bookid
		{
			get
			{
				return this._bookid;
			}
			set
			{
				if ((this._bookid != value))
				{
					if (this._book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookidChanging(value);
					this.SendPropertyChanging();
					this._bookid = value;
					this.SendPropertyChanged("bookid");
					this.OnbookidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chapter", DbType="Int")]
		public int chapter
		{
			get
			{
				return this._chapter;
			}
			set
			{
				if ((this._chapter != value))
				{
					this.OnchapterChanging(value);
					this.SendPropertyChanging();
					this._chapter = value;
					this.SendPropertyChanged("chapter");
					this.OnchapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="nvarchar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bookchapter_bookchapteralinea", Storage="_bookchapteralineas", ThisKey="bookchapterid", OtherKey="bookchapterid")]
		public EntitySet<bookchapteralinea> bookchapteralineas
		{
			get
			{
				return this._bookchapteralineas;
			}
			set
			{
				this._bookchapteralineas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_bookchapter", Storage="_book", ThisKey="bookid", OtherKey="bookid", IsForeignKey=true)]
		public book book
		{
			get
			{
				return this._book.Entity;
			}
			set
			{
				book previousValue = this._book.Entity;
				if (((previousValue != value) 
							|| (this._book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book.Entity = null;
						previousValue.bookchapters.Remove(this);
					}
					this._book.Entity = value;
					if ((value != null))
					{
						value.bookchapters.Add(this);
						this._bookid = value.bookid;
					}
					else
					{
						this._bookid = default(int);
					}
					this.SendPropertyChanged("book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookchapteralineas(bookchapteralinea entity)
		{
			this.SendPropertyChanging();
			entity.bookchapter = this;
		}
		
		private void detach_bookchapteralineas(bookchapteralinea entity)
		{
			this.SendPropertyChanging();
			entity.bookchapter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bookchapteralinea")]
	public sealed partial class bookchapteralinea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bookchapteralineaid;
		
		private int _bookchapterid;
		
		private int _Alineaid;
		
		private string _comments;
		
		private EntitySet<Text> _Texts;
		
		private EntityRef<bookchapter> _bookchapter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookchapteralineaidChanging(int value);
    partial void OnbookchapteralineaidChanged();
    partial void OnbookchapteridChanging(int value);
    partial void OnbookchapteridChanged();
    partial void OnAlineaidChanging(int value);
    partial void OnAlineaidChanged();
    partial void OncommentsChanging(string value);
    partial void OncommentsChanged();
    #endregion
		
		public bookchapteralinea()
		{
			this._Texts = new EntitySet<Text>(new Action<Text>(this.attach_Texts), new Action<Text>(this.detach_Texts));
			this._bookchapter = default(EntityRef<bookchapter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookchapteralineaid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bookchapteralineaid
		{
			get
			{
				return this._bookchapteralineaid;
			}
			set
			{
				if ((this._bookchapteralineaid != value))
				{
					this.OnbookchapteralineaidChanging(value);
					this.SendPropertyChanging();
					this._bookchapteralineaid = value;
					this.SendPropertyChanged("bookchapteralineaid");
					this.OnbookchapteralineaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookchapterid", DbType="Int")]
		public int bookchapterid
		{
			get
			{
				return this._bookchapterid;
			}
			set
			{
				if ((this._bookchapterid != value))
				{
					if (this._bookchapter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookchapteridChanging(value);
					this.SendPropertyChanging();
					this._bookchapterid = value;
					this.SendPropertyChanged("bookchapterid");
					this.OnbookchapteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alineaid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Alineaid
		{
			get
			{
				return this._Alineaid;
			}
			set
			{
				if ((this._Alineaid != value))
				{
					this.OnAlineaidChanging(value);
					this.SendPropertyChanging();
					this._Alineaid = value;
					this.SendPropertyChanged("Alineaid");
					this.OnAlineaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comments", DbType="NVarChar(50)")]
		public string comments
		{
			get
			{
				return this._comments;
			}
			set
			{
				if ((this._comments != value))
				{
					this.OncommentsChanging(value);
					this.SendPropertyChanging();
					this._comments = value;
					this.SendPropertyChanged("comments");
					this.OncommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bookchapteralinea_Text", Storage="_Texts", ThisKey="bookchapteralineaid,Alineaid", OtherKey="BookChapterAlineaid,Alineaid")]
		public EntitySet<Text> Texts
		{
			get
			{
				return this._Texts;
			}
			set
			{
				this._Texts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bookchapter_bookchapteralinea", Storage="_bookchapter", ThisKey="bookchapterid", OtherKey="bookchapterid", IsForeignKey=true)]
		public bookchapter bookchapter
		{
			get
			{
				return this._bookchapter.Entity;
			}
			set
			{
				bookchapter previousValue = this._bookchapter.Entity;
				if (((previousValue != value) 
							|| (this._bookchapter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bookchapter.Entity = null;
						previousValue.bookchapteralineas.Remove(this);
					}
					this._bookchapter.Entity = value;
					if ((value != null))
					{
						value.bookchapteralineas.Add(this);
						this._bookchapterid = value.bookchapterid;
					}
					else
					{
						this._bookchapterid = default(int);
					}
					this.SendPropertyChanged("bookchapter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		private void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		private void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Texts(Text entity)
		{
			this.SendPropertyChanging();
			entity.bookchapteralinea = this;
		}
		
		private void detach_Texts(Text entity)
		{
			this.SendPropertyChanging();
			entity.bookchapteralinea = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bookedition")]
	public partial class bookedition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bookEditionid;
		
		private int _bookid;
		
		private string _publishercode;
		
		private System.Nullable<int> _year;
		
		private string _isbn;
		
		private short _langid;
		
		private string _Copyright;
		
		private string _title;
		
		private string _EnglishTitle;
		
		private string _Author;
		
		private string _keywords;
		
		private string _description;
		
		private string _robots;
		
		private System.Nullable<System.DateTime> _PressDate;
		
		private System.Nullable<int> _forwordId;
		
		private System.Nullable<float> _Version;
		
		private string _subject;
		
		private short _bookOrder;
		
		private bool _active;
		
		private EntitySet<Text> _Texts;
		
		private EntityRef<book> _book;
		
		private EntityRef<Language> _Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbookEditionidChanging(int value);
    partial void OnbookEditionidChanged();
    partial void OnbookidChanging(int value);
    partial void OnbookidChanged();
    partial void OnpublishercodeChanging(string value);
    partial void OnpublishercodeChanged();
    partial void OnyearChanging(System.Nullable<int> value);
    partial void OnyearChanged();
    partial void OnisbnChanging(string value);
    partial void OnisbnChanged();
    partial void OnlangidChanging(short value);
    partial void OnlangidChanged();
    partial void OnCopyrightChanging(string value);
    partial void OnCopyrightChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnEnglishTitleChanging(string value);
    partial void OnEnglishTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnrobotsChanging(string value);
    partial void OnrobotsChanged();
    partial void OnPressDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPressDateChanged();
    partial void OnforwordIdChanging(System.Nullable<int> value);
    partial void OnforwordIdChanged();
    partial void OnVersionChanging(System.Nullable<float> value);
    partial void OnVersionChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbookOrderChanging(short value);
    partial void OnbookOrderChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public bookedition()
		{
			this._Texts = new EntitySet<Text>(new Action<Text>(this.attach_Texts), new Action<Text>(this.detach_Texts));
			this._book = default(EntityRef<book>);
			this._Language = default(EntityRef<Language>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookEditionid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bookEditionid
		{
			get
			{
				return this._bookEditionid;
			}
			set
			{
				if ((this._bookEditionid != value))
				{
					this.OnbookEditionidChanging(value);
					this.SendPropertyChanging();
					this._bookEditionid = value;
					this.SendPropertyChanged("bookEditionid");
					this.OnbookEditionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookid", DbType="Int NOT NULL")]
		public int bookid
		{
			get
			{
				return this._bookid;
			}
			set
			{
				if ((this._bookid != value))
				{
					if (this._book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookidChanging(value);
					this.SendPropertyChanging();
					this._bookid = value;
					this.SendPropertyChanged("bookid");
					this.OnbookidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishercode", DbType="NVarChar(8)")]
		public string publishercode
		{
			get
			{
				return this._publishercode;
			}
			set
			{
				if ((this._publishercode != value))
				{
					this.OnpublishercodeChanging(value);
					this.SendPropertyChanging();
					this._publishercode = value;
					this.SendPropertyChanged("publishercode");
					this.OnpublishercodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int")]
		public System.Nullable<int> year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isbn", DbType="NVarChar(12)")]
		public string isbn
		{
			get
			{
				return this._isbn;
			}
			set
			{
				if ((this._isbn != value))
				{
					this.OnisbnChanging(value);
					this.SendPropertyChanging();
					this._isbn = value;
					this.SendPropertyChanged("isbn");
					this.OnisbnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_langid", DbType="SmallInt NOT NULL")]
		public short langid
		{
			get
			{
				return this._langid;
			}
			set
			{
				if ((this._langid != value))
				{
					if (this._Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlangidChanging(value);
					this.SendPropertyChanging();
					this._langid = value;
					this.SendPropertyChanged("langid");
					this.OnlangidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copyright", DbType="NVarChar(50)")]
		public string Copyright
		{
			get
			{
				return this._Copyright;
			}
			set
			{
				if ((this._Copyright != value))
				{
					this.OnCopyrightChanging(value);
					this.SendPropertyChanging();
					this._Copyright = value;
					this.SendPropertyChanged("Copyright");
					this.OnCopyrightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishTitle", DbType="NVarChar(50)")]
		public string EnglishTitle
		{
			get
			{
				return this._EnglishTitle;
			}
			set
			{
				if ((this._EnglishTitle != value))
				{
					this.OnEnglishTitleChanging(value);
					this.SendPropertyChanging();
					this._EnglishTitle = value;
					this.SendPropertyChanged("EnglishTitle");
					this.OnEnglishTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(50)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="NVarChar(255)")]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_robots", DbType="NVarChar(16)")]
		public string robots
		{
			get
			{
				return this._robots;
			}
			set
			{
				if ((this._robots != value))
				{
					this.OnrobotsChanging(value);
					this.SendPropertyChanging();
					this._robots = value;
					this.SendPropertyChanged("robots");
					this.OnrobotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PressDate
		{
			get
			{
				return this._PressDate;
			}
			set
			{
				if ((this._PressDate != value))
				{
					this.OnPressDateChanging(value);
					this.SendPropertyChanging();
					this._PressDate = value;
					this.SendPropertyChanged("PressDate");
					this.OnPressDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forwordId", DbType="Int")]
		public System.Nullable<int> forwordId
		{
			get
			{
				return this._forwordId;
			}
			set
			{
				if ((this._forwordId != value))
				{
					this.OnforwordIdChanging(value);
					this.SendPropertyChanging();
					this._forwordId = value;
					this.SendPropertyChanged("forwordId");
					this.OnforwordIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Real")]
		public System.Nullable<float> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(255)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookOrder", DbType="smallint NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short bookOrder
		{
			get
			{
				return this._bookOrder;
			}
			set
			{
				if ((this._bookOrder != value))
				{
					this.OnbookOrderChanging(value);
					this.SendPropertyChanging();
					this._bookOrder = value;
					this.SendPropertyChanged("bookOrder");
					this.OnbookOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bookedition_Text", Storage="_Texts", ThisKey="bookEditionid", OtherKey="bookeditionid")]
		public EntitySet<Text> Texts
		{
			get
			{
				return this._Texts;
			}
			set
			{
				this._Texts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_bookedition", Storage="_book", ThisKey="bookid", OtherKey="bookid", IsForeignKey=true)]
		public book book
		{
			get
			{
				return this._book.Entity;
			}
			set
			{
				book previousValue = this._book.Entity;
				if (((previousValue != value) 
							|| (this._book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book.Entity = null;
						previousValue.bookeditions.Remove(this);
					}
					this._book.Entity = value;
					if ((value != null))
					{
						value.bookeditions.Add(this);
						this._bookid = value.bookid;
					}
					else
					{
						this._bookid = default(int);
					}
					this.SendPropertyChanged("book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_bookedition", Storage="_Language", ThisKey="langid", OtherKey="Langid", IsForeignKey=true)]
		public Language Language
		{
			get
			{
				return this._Language.Entity;
			}
			set
			{
				Language previousValue = this._Language.Entity;
				if (((previousValue != value) 
							|| (this._Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Language.Entity = null;
						previousValue.bookeditions.Remove(this);
					}
					this._Language.Entity = value;
					if ((value != null))
					{
						value.bookeditions.Add(this);
						this._langid = value.Langid;
					}
					else
					{
						this._langid = default(short);
					}
					this.SendPropertyChanged("Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Texts(Text entity)
		{
			this.SendPropertyChanging();
			entity.bookedition = this;
		}
		
		private void detach_Texts(Text entity)
		{
			this.SendPropertyChanging();
			entity.bookedition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Languages")]
	public partial class Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Langid;
		
		private string _Language1;
		
		private string _CultureCode;
		
		private string _FontName;
		
		private EntitySet<bookedition> _bookeditions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLangidChanging(short value);
    partial void OnLangidChanged();
    partial void OnLanguage1Changing(string value);
    partial void OnLanguage1Changed();
    partial void OnCultureCodeChanging(string value);
    partial void OnCultureCodeChanged();
    partial void OnFontNameChanging(string value);
    partial void OnFontNameChanged();
    #endregion
		
		public Language()
		{
			this._bookeditions = new EntitySet<bookedition>(new Action<bookedition>(this.attach_bookeditions), new Action<bookedition>(this.detach_bookeditions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Langid", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Langid
		{
			get
			{
				return this._Langid;
			}
			set
			{
				if ((this._Langid != value))
				{
					this.OnLangidChanging(value);
					this.SendPropertyChanging();
					this._Langid = value;
					this.SendPropertyChanged("Langid");
					this.OnLangidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Language", Storage="_Language1", DbType="NVarChar(50)")]
		public string Language1
		{
			get
			{
				return this._Language1;
			}
			set
			{
				if ((this._Language1 != value))
				{
					this.OnLanguage1Changing(value);
					this.SendPropertyChanging();
					this._Language1 = value;
					this.SendPropertyChanged("Language1");
					this.OnLanguage1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CultureCode", DbType="NVarChar(2)")]
		public string CultureCode
		{
			get
			{
				return this._CultureCode;
			}
			set
			{
				if ((this._CultureCode != value))
				{
					this.OnCultureCodeChanging(value);
					this.SendPropertyChanging();
					this._CultureCode = value;
					this.SendPropertyChanged("CultureCode");
					this.OnCultureCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FontName", DbType="NVarchar(20)", UpdateCheck=UpdateCheck.Never)]
		public string FontName
		{
			get
			{
				return this._FontName;
			}
			set
			{
				if ((this._FontName != value))
				{
					this.OnFontNameChanging(value);
					this.SendPropertyChanging();
					this._FontName = value;
					this.SendPropertyChanged("FontName");
					this.OnFontNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Language_bookedition", Storage="_bookeditions", ThisKey="Langid", OtherKey="langid")]
		public EntitySet<bookedition> bookeditions
		{
			get
			{
				return this._bookeditions;
			}
			set
			{
				this._bookeditions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookeditions(bookedition entity)
		{
			this.SendPropertyChanging();
			entity.Language = this;
		}
		
		private void detach_bookeditions(bookedition entity)
		{
			this.SendPropertyChanging();
			entity.Language = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Text")]
	public sealed partial class Text : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _textid;
		
		private int _BookChapterAlineaid;
		
		private int _Alineaid;
		
		private int _bookeditionid;
		
		private System.DateTime _timestamp;
		
		private EntitySet<textword> _textwords;
		
		private EntitySet<textwordsHistory> _textwordsHistories;
		
		private EntityRef<bookchapteralinea> _bookchapteralinea;
		
		private EntityRef<bookedition> _bookedition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntextidChanging(int value);
    partial void OntextidChanged();
    partial void OnBookChapterAlineaidChanging(int value);
    partial void OnBookChapterAlineaidChanged();
    partial void OnAlineaidChanging(int value);
    partial void OnAlineaidChanged();
    partial void OnbookeditionidChanging(int value);
    partial void OnbookeditionidChanged();
    partial void OntimestampChanging(System.DateTime value);
    partial void OntimestampChanged();
    #endregion
		
		public Text()
		{
			this._textwords = new EntitySet<textword>(new Action<textword>(this.attach_textwords), new Action<textword>(this.detach_textwords));
			this._textwordsHistories = new EntitySet<textwordsHistory>(new Action<textwordsHistory>(this.attach_textwordsHistories), new Action<textwordsHistory>(this.detach_textwordsHistories));
			this._bookchapteralinea = default(EntityRef<bookchapteralinea>);
			this._bookedition = default(EntityRef<bookedition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.WhenChanged)]
		public int textid
		{
			get
			{
				return this._textid;
			}
			set
			{
				if ((this._textid != value))
				{
					this.OntextidChanging(value);
					this.SendPropertyChanging();
					this._textid = value;
					this.SendPropertyChanged("textid");
					this.OntextidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookChapterAlineaid", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public int BookChapterAlineaid
		{
			get
			{
				return this._BookChapterAlineaid;
			}
			set
			{
				if ((this._BookChapterAlineaid != value))
				{
					if (this._bookchapteralinea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookChapterAlineaidChanging(value);
					this.SendPropertyChanging();
					this._BookChapterAlineaid = value;
					this.SendPropertyChanged("BookChapterAlineaid");
					this.OnBookChapterAlineaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alineaid", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Alineaid
		{
			get
			{
				return this._Alineaid;
			}
			set
			{
				if ((this._Alineaid != value))
				{
					if (this._bookchapteralinea.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlineaidChanging(value);
					this.SendPropertyChanging();
					this._Alineaid = value;
					this.SendPropertyChanged("Alineaid");
					this.OnAlineaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bookeditionid", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int bookeditionid
		{
			get
			{
				return this._bookeditionid;
			}
			set
			{
				if ((this._bookeditionid != value))
				{
					if (this._bookedition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbookeditionidChanging(value);
					this.SendPropertyChanging();
					this._bookeditionid = value;
					this.SendPropertyChanged("bookeditionid");
					this.OnbookeditionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timestamp", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime timestamp
		{
			get
			{
				return this._timestamp;
			}
			set
			{
				if ((this._timestamp != value))
				{
					this.OntimestampChanging(value);
					this.SendPropertyChanging();
					this._timestamp = value;
					this.SendPropertyChanged("timestamp");
					this.OntimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Text_textword", Storage="_textwords", ThisKey="textid", OtherKey="textid")]
		public EntitySet<textword> textwords
		{
			get
			{
				return this._textwords;
			}
			set
			{
				this._textwords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Text_textwordsHistory", Storage="_textwordsHistories", ThisKey="textid", OtherKey="textid")]
		public EntitySet<textwordsHistory> textwordsHistories
		{
			get
			{
				return this._textwordsHistories;
			}
			set
			{
				this._textwordsHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bookchapteralinea_Text", Storage="_bookchapteralinea", ThisKey="BookChapterAlineaid,Alineaid", OtherKey="bookchapteralineaid,Alineaid", IsForeignKey=true)]
		public bookchapteralinea bookchapteralinea
		{
			get
			{
				return this._bookchapteralinea.Entity;
			}
			set
			{
				bookchapteralinea previousValue = this._bookchapteralinea.Entity;
				if (((previousValue != value) 
							|| (this._bookchapteralinea.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bookchapteralinea.Entity = null;
						previousValue.Texts.Remove(this);
					}
					this._bookchapteralinea.Entity = value;
					if ((value != null))
					{
						value.Texts.Add(this);
						this._BookChapterAlineaid = value.bookchapteralineaid;
						this._Alineaid = value.Alineaid;
					}
					else
					{
						this._BookChapterAlineaid = default(int);
						this._Alineaid = default(int);
					}
					this.SendPropertyChanged("bookchapteralinea");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="bookedition_Text", Storage="_bookedition", ThisKey="bookeditionid", OtherKey="bookEditionid", IsForeignKey=true)]
		public bookedition bookedition
		{
			get
			{
				return this._bookedition.Entity;
			}
			set
			{
				bookedition previousValue = this._bookedition.Entity;
				if (((previousValue != value) 
							|| (this._bookedition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._bookedition.Entity = null;
						previousValue.Texts.Remove(this);
					}
					this._bookedition.Entity = value;
					if ((value != null))
					{
						value.Texts.Add(this);
						this._bookeditionid = value.bookEditionid;
					}
					else
					{
						this._bookeditionid = default(int);
					}
					this.SendPropertyChanged("bookedition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		private void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		private void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_textwords(textword entity)
		{
			this.SendPropertyChanging();
			entity.Text = this;
		}
		
		private void detach_textwords(textword entity)
		{
			this.SendPropertyChanging();
			entity.Text = null;
		}
		
		private void attach_textwordsHistories(textwordsHistory entity)
		{
			this.SendPropertyChanging();
			entity.Text = this;
		}
		
		private void detach_textwordsHistories(textwordsHistory entity)
		{
			this.SendPropertyChanging();
			entity.Text = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.textwords")]
	public sealed partial class textword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id = default(int);
		
		private int _textid;
		
		private short _wordid;
		
		private bool _IsCapitalized;
		
		private bool _AddSpace;
		
		private bool _IsAllCaps;
		
		private bool _IsFootNote;
		
		private bool _AddDot;
		
		private bool _AddComma;
		
		private bool _IsHeader;
		
		private bool _PrefixLParentThesis;
		
		private bool _SuffixRParentThesis;
		
		private bool _PrefixLBracket;
		
		private bool _SuffixRBracket;
		
		private bool _PrefixLAngle;
		
		private bool _SuffixRangle;
		
		private bool _AddColon;
		
		private bool _AddHyphenMin;
		
		private bool _RDQuote;
		
		private bool _LDQuote;
		
		private bool _RSQuote;
		
		private bool _LSQuote;
		
		private bool _AddLT;
		
		private bool _AddGT;
		
		private bool _AddSlash;
		
		private bool _AddBang;
		
		private bool _QMark;
		
		private bool _AddSlashAfter;
		
		private bool _AddEqual;
		
		private bool _PrefixAmp;
		
		private EntityRef<Text> _Text;
		
		private EntityRef<word> _word;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntextidChanging(int value);
    partial void OntextidChanged();
    partial void OnwordidChanging(short value);
    partial void OnwordidChanged();
    partial void OnIsCapitalizedChanging(bool value);
    partial void OnIsCapitalizedChanged();
    partial void OnAddSpaceChanging(bool value);
    partial void OnAddSpaceChanged();
    partial void OnIsAllCapsChanging(bool value);
    partial void OnIsAllCapsChanged();
    partial void OnIsFootNoteChanging(bool value);
    partial void OnIsFootNoteChanged();
    partial void OnAddDotChanging(bool value);
    partial void OnAddDotChanged();
    partial void OnAddCommaChanging(bool value);
    partial void OnAddCommaChanged();
    partial void OnIsHeaderChanging(bool value);
    partial void OnIsHeaderChanged();
    partial void OnLParentThesisChanging(bool value);
    partial void OnLParentThesisChanged();
    partial void OnRParentThesisChanging(bool value);
    partial void OnRParentThesisChanged();
    partial void OnLBracketChanging(bool value);
    partial void OnLBracketChanged();
    partial void OnRBracketChanging(bool value);
    partial void OnRBracketChanged();
    partial void OnSemicolonChanging(bool value);
    partial void OnSemicolonChanged();
    partial void OnPreSpaceChanging(bool value);
    partial void OnPreSpaceChanged();
    partial void OnAddColonChanging(bool value);
    partial void OnAddColonChanged();
    partial void OnAddHyphenMinChanging(bool value);
    partial void OnAddHyphenMinChanged();
    partial void OnRDQuoteChanging(bool value);
    partial void OnRDQuoteChanged();
    partial void OnLDQuoteChanging(bool value);
    partial void OnLDQuoteChanged();
    partial void OnRSQuoteChanging(bool value);
    partial void OnRSQuoteChanged();
    partial void OnLSQuoteChanging(bool value);
    partial void OnLSQuoteChanged();
    partial void OnAddLTChanging(bool value);
    partial void OnAddLTChanged();
    partial void OnAddGTChanging(bool value);
    partial void OnAddGTChanged();
    partial void OnAddSlashChanging(bool value);
    partial void OnAddSlashChanged();
    partial void OnAddBangChanging(bool value);
    partial void OnAddBangChanged();
    partial void OnQMarkChanging(bool value);
    partial void OnQMarkChanged();
    partial void OnAddSlashAfterChanging(bool value);
    partial void OnAddSlashAfterChanged();
    partial void OnAddEqualChanging(bool value);
    partial void OnAddEqualChanged();
    partial void OnPrefixAmpChanging(bool value);
    partial void OnPrefixAmpChanged();
    #endregion
		
		public textword()
		{
			this._Text = default(EntityRef<Text>);
			this._word = default(EntityRef<word>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int id
		{
			get
			{
				return this._id;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textid", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int textid
		{
			get
			{
				return this._textid;
			}
			set
			{
				if ((this._textid != value))
				{
					if (this._Text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntextidChanging(value);
					this.SendPropertyChanging();
					this._textid = value;
					this.SendPropertyChanged("textid");
					this.OntextidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wordid", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short wordid
		{
			get
			{
				return this._wordid;
			}
			set
			{
				if ((this._wordid != value))
				{
					if (this._word.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwordidChanging(value);
					this.SendPropertyChanging();
					this._wordid = value;
					this.SendPropertyChanged("wordid");
					this.OnwordidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCapitalized", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCapitalized
		{
			get
			{
				return this._IsCapitalized;
			}
			set
			{
				if ((this._IsCapitalized != value))
				{
					this.OnIsCapitalizedChanging(value);
					this.SendPropertyChanging();
					this._IsCapitalized = value;
					this.SendPropertyChanged("IsCapitalized");
					this.OnIsCapitalizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddSpace", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddSpace
		{
			get
			{
				return this._AddSpace;
			}
			set
			{
				if ((this._AddSpace != value))
				{
					this.OnAddSpaceChanging(value);
					this.SendPropertyChanging();
					this._AddSpace = value;
					this.SendPropertyChanged("AddSpace");
					this.OnAddSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllCaps", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAllCaps
		{
			get
			{
				return this._IsAllCaps;
			}
			set
			{
				if ((this._IsAllCaps != value))
				{
					this.OnIsAllCapsChanging(value);
					this.SendPropertyChanging();
					this._IsAllCaps = value;
					this.SendPropertyChanged("IsAllCaps");
					this.OnIsAllCapsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFootNote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsFootNote
		{
			get
			{
				return this._IsFootNote;
			}
			set
			{
				if ((this._IsFootNote != value))
				{
					this.OnIsFootNoteChanging(value);
					this.SendPropertyChanging();
					this._IsFootNote = value;
					this.SendPropertyChanged("IsFootNote");
					this.OnIsFootNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDot", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddDot
		{
			get
			{
				return this._AddDot;
			}
			set
			{
				if ((this._AddDot != value))
				{
					this.OnAddDotChanging(value);
					this.SendPropertyChanging();
					this._AddDot = value;
					this.SendPropertyChanged("AddDot");
					this.OnAddDotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddComma", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddComma
		{
			get
			{
				return this._AddComma;
			}
			set
			{
				if ((this._AddComma != value))
				{
					this.OnAddCommaChanging(value);
					this.SendPropertyChanging();
					this._AddComma = value;
					this.SendPropertyChanged("AddComma");
					this.OnAddCommaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHeader", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsHeader
		{
			get
			{
				return this._IsHeader;
			}
			set
			{
				if ((this._IsHeader != value))
				{
					this.OnIsHeaderChanging(value);
					this.SendPropertyChanging();
					this._IsHeader = value;
					this.SendPropertyChanged("IsHeader");
					this.OnIsHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixLParentThesis", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LParentThesis
		{
			get
			{
				return this._PrefixLParentThesis;
			}
			set
			{
				if ((this._PrefixLParentThesis != value))
				{
					this.OnLParentThesisChanging(value);
					this.SendPropertyChanging();
					this._PrefixLParentThesis = value;
					this.SendPropertyChanged("LParentThesis");
					this.OnLParentThesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixRParentThesis", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RParentThesis
		{
			get
			{
				return this._SuffixRParentThesis;
			}
			set
			{
				if ((this._SuffixRParentThesis != value))
				{
					this.OnRParentThesisChanging(value);
					this.SendPropertyChanging();
					this._SuffixRParentThesis = value;
					this.SendPropertyChanged("RParentThesis");
					this.OnRParentThesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixLBracket", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LBracket
		{
			get
			{
				return this._PrefixLBracket;
			}
			set
			{
				if ((this._PrefixLBracket != value))
				{
					this.OnLBracketChanging(value);
					this.SendPropertyChanging();
					this._PrefixLBracket = value;
					this.SendPropertyChanged("LBracket");
					this.OnLBracketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixRBracket", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RBracket
		{
			get
			{
				return this._SuffixRBracket;
			}
			set
			{
				if ((this._SuffixRBracket != value))
				{
					this.OnRBracketChanging(value);
					this.SendPropertyChanging();
					this._SuffixRBracket = value;
					this.SendPropertyChanged("RBracket");
					this.OnRBracketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LAngle", Storage="_PrefixLAngle", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Semicolon
		{
			get
			{
				return this._PrefixLAngle;
			}
			set
			{
				if ((this._PrefixLAngle != value))
				{
					this.OnSemicolonChanging(value);
					this.SendPropertyChanging();
					this._PrefixLAngle = value;
					this.SendPropertyChanged("Semicolon");
					this.OnSemicolonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Rangle", Storage="_SuffixRangle", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PreSpace
		{
			get
			{
				return this._SuffixRangle;
			}
			set
			{
				if ((this._SuffixRangle != value))
				{
					this.OnPreSpaceChanging(value);
					this.SendPropertyChanging();
					this._SuffixRangle = value;
					this.SendPropertyChanged("PreSpace");
					this.OnPreSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddColon", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddColon
		{
			get
			{
				return this._AddColon;
			}
			set
			{
				if ((this._AddColon != value))
				{
					this.OnAddColonChanging(value);
					this.SendPropertyChanging();
					this._AddColon = value;
					this.SendPropertyChanged("AddColon");
					this.OnAddColonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddHyphenMin", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddHyphenMin
		{
			get
			{
				return this._AddHyphenMin;
			}
			set
			{
				if ((this._AddHyphenMin != value))
				{
					this.OnAddHyphenMinChanging(value);
					this.SendPropertyChanging();
					this._AddHyphenMin = value;
					this.SendPropertyChanged("AddHyphenMin");
					this.OnAddHyphenMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RDQuote
		{
			get
			{
				return this._RDQuote;
			}
			set
			{
				if ((this._RDQuote != value))
				{
					this.OnRDQuoteChanging(value);
					this.SendPropertyChanging();
					this._RDQuote = value;
					this.SendPropertyChanged("RDQuote");
					this.OnRDQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LDQuote
		{
			get
			{
				return this._LDQuote;
			}
			set
			{
				if ((this._LDQuote != value))
				{
					this.OnLDQuoteChanging(value);
					this.SendPropertyChanging();
					this._LDQuote = value;
					this.SendPropertyChanged("LDQuote");
					this.OnLDQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RSQuote
		{
			get
			{
				return this._RSQuote;
			}
			set
			{
				if ((this._RSQuote != value))
				{
					this.OnRSQuoteChanging(value);
					this.SendPropertyChanging();
					this._RSQuote = value;
					this.SendPropertyChanged("RSQuote");
					this.OnRSQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LSQuote
		{
			get
			{
				return this._LSQuote;
			}
			set
			{
				if ((this._LSQuote != value))
				{
					this.OnLSQuoteChanging(value);
					this.SendPropertyChanging();
					this._LSQuote = value;
					this.SendPropertyChanged("LSQuote");
					this.OnLSQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddLT", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddLT
		{
			get
			{
				return this._AddLT;
			}
			set
			{
				if ((this._AddLT != value))
				{
					this.OnAddLTChanging(value);
					this.SendPropertyChanging();
					this._AddLT = value;
					this.SendPropertyChanged("AddLT");
					this.OnAddLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AddGT ", Storage="_AddGT", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddGT
		{
			get
			{
				return this._AddGT;
			}
			set
			{
				if ((this._AddGT != value))
				{
					this.OnAddGTChanging(value);
					this.SendPropertyChanging();
					this._AddGT = value;
					this.SendPropertyChanged("AddGT");
					this.OnAddGTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddSlash", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddSlash
		{
			get
			{
				return this._AddSlash;
			}
			set
			{
				if ((this._AddSlash != value))
				{
					this.OnAddSlashChanging(value);
					this.SendPropertyChanging();
					this._AddSlash = value;
					this.SendPropertyChanged("AddSlash");
					this.OnAddSlashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddBang", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddBang
		{
			get
			{
				return this._AddBang;
			}
			set
			{
				if ((this._AddBang != value))
				{
					this.OnAddBangChanging(value);
					this.SendPropertyChanging();
					this._AddBang = value;
					this.SendPropertyChanged("AddBang");
					this.OnAddBangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QMark", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool QMark
		{
			get
			{
				return this._QMark;
			}
			set
			{
				if ((this._QMark != value))
				{
					this.OnQMarkChanging(value);
					this.SendPropertyChanging();
					this._QMark = value;
					this.SendPropertyChanged("QMark");
					this.OnQMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddSlashAfter", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddSlashAfter
		{
			get
			{
				return this._AddSlashAfter;
			}
			set
			{
				if ((this._AddSlashAfter != value))
				{
					this.OnAddSlashAfterChanging(value);
					this.SendPropertyChanging();
					this._AddSlashAfter = value;
					this.SendPropertyChanged("AddSlashAfter");
					this.OnAddSlashAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddEqual", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddEqual
		{
			get
			{
				return this._AddEqual;
			}
			set
			{
				if ((this._AddEqual != value))
				{
					this.OnAddEqualChanging(value);
					this.SendPropertyChanging();
					this._AddEqual = value;
					this.SendPropertyChanged("AddEqual");
					this.OnAddEqualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AddAmp", Storage="_PrefixAmp", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrefixAmp
		{
			get
			{
				return this._PrefixAmp;
			}
			set
			{
				if ((this._PrefixAmp != value))
				{
					this.OnPrefixAmpChanging(value);
					this.SendPropertyChanging();
					this._PrefixAmp = value;
					this.SendPropertyChanged("PrefixAmp");
					this.OnPrefixAmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Text_textword", Storage="_Text", ThisKey="textid", OtherKey="textid", IsForeignKey=true)]
		public Text Text
		{
			get
			{
				return this._Text.Entity;
			}
			set
			{
				Text previousValue = this._Text.Entity;
				if (((previousValue != value) 
							|| (this._Text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Text.Entity = null;
						previousValue.textwords.Remove(this);
					}
					this._Text.Entity = value;
					if ((value != null))
					{
						value.textwords.Add(this);
						this._textid = value.textid;
					}
					else
					{
						this._textid = default(int);
					}
					this.SendPropertyChanged("Text");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_textword", Storage="_word", ThisKey="wordid", OtherKey="id", IsForeignKey=true)]
		public word word
		{
			get
			{
				return this._word.Entity;
			}
			set
			{
				word previousValue = this._word.Entity;
				if (((previousValue != value) 
							|| (this._word.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._word.Entity = null;
						previousValue.textwords.Remove(this);
					}
					this._word.Entity = value;
					if ((value != null))
					{
						value.textwords.Add(this);
						this._wordid = value.id;
					}
					else
					{
						this._wordid = default(short);
					}
					this.SendPropertyChanged("word");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		private void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		private void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.words")]
	public sealed partial class word : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id = default(short);
		
		private System.Data.Linq.Binary _word1;
		
		private bool _IsSymbol = default(bool);
		
		private bool _IsHtml = default(bool);
		
		private short _LangId;
		
		private bool _IsNumber;
		
		private System.Nullable<int> _number;
		
		private EntitySet<textword> _textwords;
		
		private EntitySet<textwordsHistory> _textwordsHistories;
		
		private EntitySet<Synonym> _Synonyms;
		
		private EntitySet<Synonym> _Synonyms1;
		
		private EntitySet<TranslateToWord> _TranslateToWords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnwordXChanging(System.Data.Linq.Binary value);
    partial void OnwordXChanged();
    partial void OnLangIdChanging(short value);
    partial void OnLangIdChanged();
    partial void OnIsNumberChanging(bool value);
    partial void OnIsNumberChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    #endregion
		
		public word()
		{
			this._textwords = new EntitySet<textword>(new Action<textword>(this.attach_textwords), new Action<textword>(this.detach_textwords));
			this._textwordsHistories = new EntitySet<textwordsHistory>(new Action<textwordsHistory>(this.attach_textwordsHistories), new Action<textwordsHistory>(this.detach_textwordsHistories));
			this._Synonyms = new EntitySet<Synonym>(new Action<Synonym>(this.attach_Synonyms), new Action<Synonym>(this.detach_Synonyms));
			this._Synonyms1 = new EntitySet<Synonym>(new Action<Synonym>(this.attach_Synonyms1), new Action<Synonym>(this.detach_Synonyms1));
			this._TranslateToWords = new EntitySet<TranslateToWord>(new Action<TranslateToWord>(this.attach_TranslateToWords), new Action<TranslateToWord>(this.detach_TranslateToWords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public short id
		{
			get
			{
				return this._id;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="word", Storage="_word1", DbType="VarBinary(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		private System.Data.Linq.Binary wordX
		{
			get
			{
				return this._word1;
			}
			set
			{
				if ((this._word1 != value))
				{
					this.OnwordXChanging(value);
					this.SendPropertyChanging();
					this._word1 = value;
					this.SendPropertyChanged("wordX");
					this.OnwordXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSymbol", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsSymbol
		{
			get
			{
				return this._IsSymbol;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHtml", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsHtml
		{
			get
			{
				return this._IsHtml;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangId", DbType="smallint NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short LangId
		{
			get
			{
				return this._LangId;
			}
			set
			{
				if ((this._LangId != value))
				{
					this.OnLangIdChanging(value);
					this.SendPropertyChanging();
					this._LangId = value;
					this.SendPropertyChanged("LangId");
					this.OnLangIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNumber", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsNumber
		{
			get
			{
				return this._IsNumber;
			}
			set
			{
				if ((this._IsNumber != value))
				{
					this.OnIsNumberChanging(value);
					this.SendPropertyChanging();
					this._IsNumber = value;
					this.SendPropertyChanged("IsNumber");
					this.OnIsNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="int NULL", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_textword", Storage="_textwords", ThisKey="id", OtherKey="wordid")]
		public EntitySet<textword> textwords
		{
			get
			{
				return this._textwords;
			}
			set
			{
				this._textwords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_textwordsHistory", Storage="_textwordsHistories", ThisKey="id", OtherKey="wordid")]
		public EntitySet<textwordsHistory> textwordsHistories
		{
			get
			{
				return this._textwordsHistories;
			}
			set
			{
				this._textwordsHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_Synonym", Storage="_Synonyms", ThisKey="id", OtherKey="wordid")]
		public EntitySet<Synonym> Synonyms
		{
			get
			{
				return this._Synonyms;
			}
			set
			{
				this._Synonyms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_Synonym1", Storage="_Synonyms1", ThisKey="id", OtherKey="synonym_wordid")]
		public EntitySet<Synonym> Synonyms1
		{
			get
			{
				return this._Synonyms1;
			}
			set
			{
				this._Synonyms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_TranslateToWord", Storage="_TranslateToWords", ThisKey="id", OtherKey="wordid")]
		public EntitySet<TranslateToWord> TranslateToWords
		{
			get
			{
				return this._TranslateToWords;
			}
			set
			{
				this._TranslateToWords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		private void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		private void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_textwords(textword entity)
		{
			this.SendPropertyChanging();
			entity.word = this;
		}
		
		private void detach_textwords(textword entity)
		{
			this.SendPropertyChanging();
			entity.word = null;
		}
		
		private void attach_textwordsHistories(textwordsHistory entity)
		{
			this.SendPropertyChanging();
			entity.word = this;
		}
		
		private void detach_textwordsHistories(textwordsHistory entity)
		{
			this.SendPropertyChanging();
			entity.word = null;
		}
		
		private void attach_Synonyms(Synonym entity)
		{
			this.SendPropertyChanging();
			entity.word = this;
		}
		
		private void detach_Synonyms(Synonym entity)
		{
			this.SendPropertyChanging();
			entity.word = null;
		}
		
		private void attach_Synonyms1(Synonym entity)
		{
			this.SendPropertyChanging();
			entity.word1 = this;
		}
		
		private void detach_Synonyms1(Synonym entity)
		{
			this.SendPropertyChanging();
			entity.word1 = null;
		}
		
		private void attach_TranslateToWords(TranslateToWord entity)
		{
			this.SendPropertyChanging();
			entity.word1 = this;
		}
		
		private void detach_TranslateToWords(TranslateToWord entity)
		{
			this.SendPropertyChanging();
			entity.word1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.textwordsHistory")]
	public partial class textwordsHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _textid;
		
		private short _wordid;
		
		private bool _IsCapitalized;
		
		private bool _AddSpace;
		
		private bool _IsAllCaps;
		
		private bool _IsFootNote;
		
		private bool _AddDot;
		
		private bool _AddComma;
		
		private System.DateTime _ArchiveDate;
		
		private bool _IsHeader;
		
		private bool _PrefixLParentThesis;
		
		private bool _SuffixRParentThesis;
		
		private bool _PrefixLBracket;
		
		private bool _SuffixRBracket;
		
		private bool _PrefixLAngle;
		
		private bool _SuffixRangle;
		
		private bool _AddColon;
		
		private bool _AddHyphenMin;
		
		private bool _RDQuote;
		
		private bool _LDQuote;
		
		private bool _RSQuote;
		
		private bool _LSQuote;
		
		private bool _AddLT;
		
		private bool _AddGT;
		
		private bool _AddSlash;
		
		private bool _AddBang;
		
		private bool _QMark;
		
		private bool _AddSlashAfter;
		
		private bool _AddEqual;
		
		private bool _PrefixAmp;
		
		private EntityRef<Text> _Text;
		
		private EntityRef<word> _word;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntextidChanging(int value);
    partial void OntextidChanged();
    partial void OnwordidChanging(short value);
    partial void OnwordidChanged();
    partial void OnIsCapitalizedChanging(bool value);
    partial void OnIsCapitalizedChanged();
    partial void OnAddSpaceChanging(bool value);
    partial void OnAddSpaceChanged();
    partial void OnIsAllCapsChanging(bool value);
    partial void OnIsAllCapsChanged();
    partial void OnIsFootNoteChanging(bool value);
    partial void OnIsFootNoteChanged();
    partial void OnAddDotChanging(bool value);
    partial void OnAddDotChanged();
    partial void OnAddCommaChanging(bool value);
    partial void OnAddCommaChanged();
    partial void OnArchiveDateChanging(System.DateTime value);
    partial void OnArchiveDateChanged();
    partial void OnIsHeaderChanging(bool value);
    partial void OnIsHeaderChanged();
    partial void OnLParentThesisChanging(bool value);
    partial void OnLParentThesisChanged();
    partial void OnRParentThesisChanging(bool value);
    partial void OnRParentThesisChanged();
    partial void OnLBracketChanging(bool value);
    partial void OnLBracketChanged();
    partial void OnRBracketChanging(bool value);
    partial void OnRBracketChanged();
    partial void OnSemicolonChanging(bool value);
    partial void OnSemicolonChanged();
    partial void OnPreSpaceChanging(bool value);
    partial void OnPreSpaceChanged();
    partial void OnAddColonChanging(bool value);
    partial void OnAddColonChanged();
    partial void OnAddHyphenMinChanging(bool value);
    partial void OnAddHyphenMinChanged();
    partial void OnRDQuoteChanging(bool value);
    partial void OnRDQuoteChanged();
    partial void OnLDQuoteChanging(bool value);
    partial void OnLDQuoteChanged();
    partial void OnRSQuoteChanging(bool value);
    partial void OnRSQuoteChanged();
    partial void OnLSQuoteChanging(bool value);
    partial void OnLSQuoteChanged();
    partial void OnAddLTChanging(bool value);
    partial void OnAddLTChanged();
    partial void OnAddGTChanging(bool value);
    partial void OnAddGTChanged();
    partial void OnAddSlashChanging(bool value);
    partial void OnAddSlashChanged();
    partial void OnAddBangChanging(bool value);
    partial void OnAddBangChanged();
    partial void OnQMarkChanging(bool value);
    partial void OnQMarkChanged();
    partial void OnAddSlashAfterChanging(bool value);
    partial void OnAddSlashAfterChanged();
    partial void OnAddEqualChanging(bool value);
    partial void OnAddEqualChanged();
    partial void OnPrefixAmpChanging(bool value);
    partial void OnPrefixAmpChanged();
    #endregion
		
		public textwordsHistory()
		{
			this._Text = default(EntityRef<Text>);
			this._word = default(EntityRef<word>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_textid", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int textid
		{
			get
			{
				return this._textid;
			}
			set
			{
				if ((this._textid != value))
				{
					if (this._Text.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntextidChanging(value);
					this.SendPropertyChanging();
					this._textid = value;
					this.SendPropertyChanged("textid");
					this.OntextidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wordid", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short wordid
		{
			get
			{
				return this._wordid;
			}
			set
			{
				if ((this._wordid != value))
				{
					if (this._word.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwordidChanging(value);
					this.SendPropertyChanging();
					this._wordid = value;
					this.SendPropertyChanged("wordid");
					this.OnwordidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCapitalized", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsCapitalized
		{
			get
			{
				return this._IsCapitalized;
			}
			set
			{
				if ((this._IsCapitalized != value))
				{
					this.OnIsCapitalizedChanging(value);
					this.SendPropertyChanging();
					this._IsCapitalized = value;
					this.SendPropertyChanged("IsCapitalized");
					this.OnIsCapitalizedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddSpace", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddSpace
		{
			get
			{
				return this._AddSpace;
			}
			set
			{
				if ((this._AddSpace != value))
				{
					this.OnAddSpaceChanging(value);
					this.SendPropertyChanging();
					this._AddSpace = value;
					this.SendPropertyChanged("AddSpace");
					this.OnAddSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAllCaps", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsAllCaps
		{
			get
			{
				return this._IsAllCaps;
			}
			set
			{
				if ((this._IsAllCaps != value))
				{
					this.OnIsAllCapsChanging(value);
					this.SendPropertyChanging();
					this._IsAllCaps = value;
					this.SendPropertyChanged("IsAllCaps");
					this.OnIsAllCapsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFootNote", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsFootNote
		{
			get
			{
				return this._IsFootNote;
			}
			set
			{
				if ((this._IsFootNote != value))
				{
					this.OnIsFootNoteChanging(value);
					this.SendPropertyChanging();
					this._IsFootNote = value;
					this.SendPropertyChanged("IsFootNote");
					this.OnIsFootNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddDot", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddDot
		{
			get
			{
				return this._AddDot;
			}
			set
			{
				if ((this._AddDot != value))
				{
					this.OnAddDotChanging(value);
					this.SendPropertyChanging();
					this._AddDot = value;
					this.SendPropertyChanged("AddDot");
					this.OnAddDotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddComma", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddComma
		{
			get
			{
				return this._AddComma;
			}
			set
			{
				if ((this._AddComma != value))
				{
					this.OnAddCommaChanging(value);
					this.SendPropertyChanging();
					this._AddComma = value;
					this.SendPropertyChanged("AddComma");
					this.OnAddCommaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArchiveDate", DbType="SmallDateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime ArchiveDate
		{
			get
			{
				return this._ArchiveDate;
			}
			set
			{
				if ((this._ArchiveDate != value))
				{
					this.OnArchiveDateChanging(value);
					this.SendPropertyChanging();
					this._ArchiveDate = value;
					this.SendPropertyChanged("ArchiveDate");
					this.OnArchiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHeader", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool IsHeader
		{
			get
			{
				return this._IsHeader;
			}
			set
			{
				if ((this._IsHeader != value))
				{
					this.OnIsHeaderChanging(value);
					this.SendPropertyChanging();
					this._IsHeader = value;
					this.SendPropertyChanged("IsHeader");
					this.OnIsHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixLParentThesis", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LParentThesis
		{
			get
			{
				return this._PrefixLParentThesis;
			}
			set
			{
				if ((this._PrefixLParentThesis != value))
				{
					this.OnLParentThesisChanging(value);
					this.SendPropertyChanging();
					this._PrefixLParentThesis = value;
					this.SendPropertyChanged("LParentThesis");
					this.OnLParentThesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixRParentThesis", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RParentThesis
		{
			get
			{
				return this._SuffixRParentThesis;
			}
			set
			{
				if ((this._SuffixRParentThesis != value))
				{
					this.OnRParentThesisChanging(value);
					this.SendPropertyChanging();
					this._SuffixRParentThesis = value;
					this.SendPropertyChanged("RParentThesis");
					this.OnRParentThesisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrefixLBracket", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LBracket
		{
			get
			{
				return this._PrefixLBracket;
			}
			set
			{
				if ((this._PrefixLBracket != value))
				{
					this.OnLBracketChanging(value);
					this.SendPropertyChanging();
					this._PrefixLBracket = value;
					this.SendPropertyChanged("LBracket");
					this.OnLBracketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuffixRBracket", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RBracket
		{
			get
			{
				return this._SuffixRBracket;
			}
			set
			{
				if ((this._SuffixRBracket != value))
				{
					this.OnRBracketChanging(value);
					this.SendPropertyChanging();
					this._SuffixRBracket = value;
					this.SendPropertyChanged("RBracket");
					this.OnRBracketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="LAngle", Storage="_PrefixLAngle", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Semicolon
		{
			get
			{
				return this._PrefixLAngle;
			}
			set
			{
				if ((this._PrefixLAngle != value))
				{
					this.OnSemicolonChanging(value);
					this.SendPropertyChanging();
					this._PrefixLAngle = value;
					this.SendPropertyChanged("Semicolon");
					this.OnSemicolonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Rangle", Storage="_SuffixRangle", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PreSpace
		{
			get
			{
				return this._SuffixRangle;
			}
			set
			{
				if ((this._SuffixRangle != value))
				{
					this.OnPreSpaceChanging(value);
					this.SendPropertyChanging();
					this._SuffixRangle = value;
					this.SendPropertyChanged("PreSpace");
					this.OnPreSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddColon", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddColon
		{
			get
			{
				return this._AddColon;
			}
			set
			{
				if ((this._AddColon != value))
				{
					this.OnAddColonChanging(value);
					this.SendPropertyChanging();
					this._AddColon = value;
					this.SendPropertyChanged("AddColon");
					this.OnAddColonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddHyphenMin", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddHyphenMin
		{
			get
			{
				return this._AddHyphenMin;
			}
			set
			{
				if ((this._AddHyphenMin != value))
				{
					this.OnAddHyphenMinChanging(value);
					this.SendPropertyChanging();
					this._AddHyphenMin = value;
					this.SendPropertyChanged("AddHyphenMin");
					this.OnAddHyphenMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RDQuote
		{
			get
			{
				return this._RDQuote;
			}
			set
			{
				if ((this._RDQuote != value))
				{
					this.OnRDQuoteChanging(value);
					this.SendPropertyChanging();
					this._RDQuote = value;
					this.SendPropertyChanged("RDQuote");
					this.OnRDQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LDQuote
		{
			get
			{
				return this._LDQuote;
			}
			set
			{
				if ((this._LDQuote != value))
				{
					this.OnLDQuoteChanging(value);
					this.SendPropertyChanging();
					this._LDQuote = value;
					this.SendPropertyChanged("LDQuote");
					this.OnLDQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RSQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool RSQuote
		{
			get
			{
				return this._RSQuote;
			}
			set
			{
				if ((this._RSQuote != value))
				{
					this.OnRSQuoteChanging(value);
					this.SendPropertyChanging();
					this._RSQuote = value;
					this.SendPropertyChanged("RSQuote");
					this.OnRSQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSQuote", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LSQuote
		{
			get
			{
				return this._LSQuote;
			}
			set
			{
				if ((this._LSQuote != value))
				{
					this.OnLSQuoteChanging(value);
					this.SendPropertyChanging();
					this._LSQuote = value;
					this.SendPropertyChanged("LSQuote");
					this.OnLSQuoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddLT", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddLT
		{
			get
			{
				return this._AddLT;
			}
			set
			{
				if ((this._AddLT != value))
				{
					this.OnAddLTChanging(value);
					this.SendPropertyChanging();
					this._AddLT = value;
					this.SendPropertyChanged("AddLT");
					this.OnAddLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AddGT ", Storage="_AddGT", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddGT
		{
			get
			{
				return this._AddGT;
			}
			set
			{
				if ((this._AddGT != value))
				{
					this.OnAddGTChanging(value);
					this.SendPropertyChanging();
					this._AddGT = value;
					this.SendPropertyChanged("AddGT");
					this.OnAddGTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddSlash", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddSlash
		{
			get
			{
				return this._AddSlash;
			}
			set
			{
				if ((this._AddSlash != value))
				{
					this.OnAddSlashChanging(value);
					this.SendPropertyChanging();
					this._AddSlash = value;
					this.SendPropertyChanged("AddSlash");
					this.OnAddSlashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddBang", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddBang
		{
			get
			{
				return this._AddBang;
			}
			set
			{
				if ((this._AddBang != value))
				{
					this.OnAddBangChanging(value);
					this.SendPropertyChanging();
					this._AddBang = value;
					this.SendPropertyChanged("AddBang");
					this.OnAddBangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QMark", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool QMark
		{
			get
			{
				return this._QMark;
			}
			set
			{
				if ((this._QMark != value))
				{
					this.OnQMarkChanging(value);
					this.SendPropertyChanging();
					this._QMark = value;
					this.SendPropertyChanged("QMark");
					this.OnQMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddSlashAfter", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddSlashAfter
		{
			get
			{
				return this._AddSlashAfter;
			}
			set
			{
				if ((this._AddSlashAfter != value))
				{
					this.OnAddSlashAfterChanging(value);
					this.SendPropertyChanging();
					this._AddSlashAfter = value;
					this.SendPropertyChanged("AddSlashAfter");
					this.OnAddSlashAfterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddEqual", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AddEqual
		{
			get
			{
				return this._AddEqual;
			}
			set
			{
				if ((this._AddEqual != value))
				{
					this.OnAddEqualChanging(value);
					this.SendPropertyChanging();
					this._AddEqual = value;
					this.SendPropertyChanged("AddEqual");
					this.OnAddEqualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AddAmp", Storage="_PrefixAmp", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool PrefixAmp
		{
			get
			{
				return this._PrefixAmp;
			}
			set
			{
				if ((this._PrefixAmp != value))
				{
					this.OnPrefixAmpChanging(value);
					this.SendPropertyChanging();
					this._PrefixAmp = value;
					this.SendPropertyChanged("PrefixAmp");
					this.OnPrefixAmpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Text_textwordsHistory", Storage="_Text", ThisKey="textid", OtherKey="textid", IsForeignKey=true)]
		public Text Text
		{
			get
			{
				return this._Text.Entity;
			}
			set
			{
				Text previousValue = this._Text.Entity;
				if (((previousValue != value) 
							|| (this._Text.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Text.Entity = null;
						previousValue.textwordsHistories.Remove(this);
					}
					this._Text.Entity = value;
					if ((value != null))
					{
						value.textwordsHistories.Add(this);
						this._textid = value.textid;
					}
					else
					{
						this._textid = default(int);
					}
					this.SendPropertyChanged("Text");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_textwordsHistory", Storage="_word", ThisKey="wordid", OtherKey="id", IsForeignKey=true)]
		public word word
		{
			get
			{
				return this._word.Entity;
			}
			set
			{
				word previousValue = this._word.Entity;
				if (((previousValue != value) 
							|| (this._word.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._word.Entity = null;
						previousValue.textwordsHistories.Remove(this);
					}
					this._word.Entity = value;
					if ((value != null))
					{
						value.textwordsHistories.Add(this);
						this._wordid = value.id;
					}
					else
					{
						this._wordid = default(short);
					}
					this.SendPropertyChanged("word");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Synonym")]
	public partial class Synonym : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private short _wordid;
		
		private short _synonym_wordid;
		
		private EntityRef<word> _word;
		
		private EntityRef<word> _word1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnwordidChanging(short value);
    partial void OnwordidChanged();
    partial void Onsynonym_wordidChanging(short value);
    partial void Onsynonym_wordidChanged();
    #endregion
		
		public Synonym()
		{
			this._word = default(EntityRef<word>);
			this._word1 = default(EntityRef<word>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wordid", DbType="SmallInt NOT NULL")]
		public short wordid
		{
			get
			{
				return this._wordid;
			}
			set
			{
				if ((this._wordid != value))
				{
					if (this._word.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwordidChanging(value);
					this.SendPropertyChanging();
					this._wordid = value;
					this.SendPropertyChanged("wordid");
					this.OnwordidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_synonym_wordid", DbType="SmallInt NOT NULL")]
		public short synonym_wordid
		{
			get
			{
				return this._synonym_wordid;
			}
			set
			{
				if ((this._synonym_wordid != value))
				{
					if (this._word1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsynonym_wordidChanging(value);
					this.SendPropertyChanging();
					this._synonym_wordid = value;
					this.SendPropertyChanged("synonym_wordid");
					this.Onsynonym_wordidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_Synonym", Storage="_word", ThisKey="wordid", OtherKey="id", IsForeignKey=true)]
		public word word
		{
			get
			{
				return this._word.Entity;
			}
			set
			{
				word previousValue = this._word.Entity;
				if (((previousValue != value) 
							|| (this._word.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._word.Entity = null;
						previousValue.Synonyms.Remove(this);
					}
					this._word.Entity = value;
					if ((value != null))
					{
						value.Synonyms.Add(this);
						this._wordid = value.id;
					}
					else
					{
						this._wordid = default(short);
					}
					this.SendPropertyChanged("word");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_Synonym1", Storage="_word1", ThisKey="synonym_wordid", OtherKey="id", IsForeignKey=true)]
		public word word1
		{
			get
			{
				return this._word1.Entity;
			}
			set
			{
				word previousValue = this._word1.Entity;
				if (((previousValue != value) 
							|| (this._word1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._word1.Entity = null;
						previousValue.Synonyms1.Remove(this);
					}
					this._word1.Entity = value;
					if ((value != null))
					{
						value.Synonyms1.Add(this);
						this._synonym_wordid = value.id;
					}
					else
					{
						this._synonym_wordid = default(short);
					}
					this.SendPropertyChanged("word1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tPublicationCodes")]
	public partial class PublicationCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _publicationCode;
		
		private string _Name;
		
		private bool _searchable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpublicationCodeChanging(string value);
    partial void OnpublicationCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnsearchableChanging(bool value);
    partial void OnsearchableChanged();
    #endregion
		
		public PublicationCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publicationCode", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string publicationCode
		{
			get
			{
				return this._publicationCode;
			}
			set
			{
				if ((this._publicationCode != value))
				{
					this.OnpublicationCodeChanging(value);
					this.SendPropertyChanging();
					this._publicationCode = value;
					this.SendPropertyChanged("publicationCode");
					this.OnpublicationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_searchable", DbType="Bit NOT NULL")]
		public bool searchable
		{
			get
			{
				return this._searchable;
			}
			set
			{
				if ((this._searchable != value))
				{
					this.OnsearchableChanging(value);
					this.SendPropertyChanging();
					this._searchable = value;
					this.SendPropertyChanged("searchable");
					this.OnsearchableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TranslateToWords")]
	public partial class TranslateToWord : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _id;
		
		private string _word;
		
		private System.Nullable<short> _wordid;
		
		private string _specialCharacters;
		
		private bool _CapitalizeTargetWord;
		
		private EntityRef<word> _word1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(short value);
    partial void OnidChanged();
    partial void OnwordChanging(string value);
    partial void OnwordChanged();
    partial void OnwordidChanging(System.Nullable<short> value);
    partial void OnwordidChanged();
    partial void OnspecialCharactersChanging(string value);
    partial void OnspecialCharactersChanged();
    partial void OnCapitalizeTargetWordChanging(bool value);
    partial void OnCapitalizeTargetWordChanged();
    #endregion
		
		public TranslateToWord()
		{
			this._word1 = default(EntityRef<word>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public short id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_word", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string word
		{
			get
			{
				return this._word;
			}
			set
			{
				if ((this._word != value))
				{
					this.OnwordChanging(value);
					this.SendPropertyChanging();
					this._word = value;
					this.SendPropertyChanged("word");
					this.OnwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wordid", DbType="SmallInt")]
		public System.Nullable<short> wordid
		{
			get
			{
				return this._wordid;
			}
			set
			{
				if ((this._wordid != value))
				{
					if (this._word1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwordidChanging(value);
					this.SendPropertyChanging();
					this._wordid = value;
					this.SendPropertyChanged("wordid");
					this.OnwordidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specialCharacters", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.WhenChanged)]
		public string specialCharacters
		{
			get
			{
				return this._specialCharacters;
			}
			set
			{
				if ((this._specialCharacters != value))
				{
					this.OnspecialCharactersChanging(value);
					this.SendPropertyChanging();
					this._specialCharacters = value;
					this.SendPropertyChanged("specialCharacters");
					this.OnspecialCharactersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapitalizeTargetWord", DbType="bit NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		public bool CapitalizeTargetWord
		{
			get
			{
				return this._CapitalizeTargetWord;
			}
			set
			{
				if ((this._CapitalizeTargetWord != value))
				{
					this.OnCapitalizeTargetWordChanging(value);
					this.SendPropertyChanging();
					this._CapitalizeTargetWord = value;
					this.SendPropertyChanged("CapitalizeTargetWord");
					this.OnCapitalizeTargetWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="word_TranslateToWord", Storage="_word1", ThisKey="wordid", OtherKey="id", IsForeignKey=true)]
		public word word1
		{
			get
			{
				return this._word1.Entity;
			}
			set
			{
				word previousValue = this._word1.Entity;
				if (((previousValue != value) 
							|| (this._word1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._word1.Entity = null;
						previousValue.TranslateToWords.Remove(this);
					}
					this._word1.Entity = value;
					if ((value != null))
					{
						value.TranslateToWords.Add(this);
						this._wordid = value.id;
					}
					else
					{
						this._wordid = default(Nullable<short>);
					}
					this.SendPropertyChanged("word1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
